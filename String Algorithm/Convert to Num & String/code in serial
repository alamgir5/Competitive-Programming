//A=1,B=2,C=3..AA=27...

#include <bits/stdc++.h>
using namespace std;

#define faster      ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define pi          acos(-1.0)
#define nl          '\n'

/**-------Library-------*/
#define mem(a,b)       memset(a,b,sizeof(a))
#define all(a)         a.begin(),a.end()
#define Sort(x)        sort(x.begin(),x.end())
#define SortR(x)       sort(x.begin(),x.end(),greater<int>())
#define Reverse(x)     reverse(x.begin(),x.end())

#define Sum(A,n)       accumulate(A,A+n,0)
#define SortA(ar,s)    sort(ar,ar+s)
#define SortD(ar,s)    sort(ar,ar+s,greater<int>())
#define maxa(A,n)      *max_element(A,A+n)
#define mina(A,n)      *min_element(A,A+n)
#define gcd(a,b)       __gcd(a,b)
#define lcm(a,b)       (a*(b/gcd(a,b)))
#define sq(x)          (x)*(x)
#define mid(l,r)       (l+(r-l)/2)

#define trzero(x)       __builtin_ctz(x)
#define parity(x)       __builtin_parity(x)
#define countone(x)     __builtin_popcount(x)
#define left(p)         (p<<1)
#define right(p)        (p>>1)

#define min3(a,b,c)       min(a,min(b,c))
#define min4(a,b,c,d)     min(a,min(b,min(c,d)))
#define max3(a,b,c)       max(a,max(b,c))
#define max4(a,b,c,d)     max(a,max(b,max(c,d)))
#define pb(x)             push_back(x)
#define mod               1000000007
#define precision(x)      cout<<fixed<<setprecision(x)
#define nel               cout<<nl
#define yes               cout<<"YES"<<nl
#define no                cout<<"NO"<<nl

/**----------Graph Moves----------*/
const int fx[] = {+1,-1,+0,+0};                         // 4 X directions
const int fy[] = {+0,+0,+1,-1};                         // 4 Y directions
const int fx8[] = {+0,+0,+1,-1,-1,+1,-1,+1};            // King X Moves
const int fy8[] = {-1,+1,+0,+0,+1,+1,-1,-1};            // King Y Moves
const int kx[] = {-2, -2, -1, -1,  1,  1,  2,  2};      // Knight X Moves
const int ky[] = {-1,  1, -2,  2, -2,  2, -1,  1};      // Knight Y Moves

/**----data type----*/
typedef long long int ll;
typedef unsigned long long int  llu;

bool check1(string s)
{
    int cnt=0;
    for(int i=1; i<s.size(); i++)
    {
        if(isalpha(s[i-1]) && isdigit(s[i]))
            cnt++;
    }
    if(cnt==2)
        return true;
    else return false;
}

string ss;
void num_to_str(int num)
{
    if(num)
    {
        num_to_str((num-1)/26);
        ss+=('A'+ (num-1)%26);
    }
}

int ans=0;
void str_to_num(string s)
{
    for(int i=0;i<s.size();i++)
    {
        ans=ans*26+s[i]-'A'+1;
    }
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        if(check1(s))
        {
            string num;
            for(int i=s.size()-1; i>=0; i--)
            {
                if(isalpha(s[i]))
                    break;
                else num+=s[i];
            }
            Reverse(num);
            ///cout<<num<<nl;
            int numm=stoi(num);
            num_to_str(numm);
            cout<<ss;
            ss.clear();
            for(int i=1; i<s.size(); i++)
            {
                if(isalpha(s[i]))
                    break;
                cout<<s[i];
            }
            nel;
        }
        else
        {
            ///cout<<"HUDai"<<nl;
            string num,x;
            for(int i=0; i<s.size(); i++)
            {
                if(isalpha(s[i]))
                    x+=s[i];
                else num+=s[i];
            }
            cout<<"R"<<num<<"C";
            str_to_num(x);
            cout<<ans<<nl;
            ans=0;
        }
    }
    return 0;
}
